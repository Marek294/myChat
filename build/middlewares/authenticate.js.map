{"version":3,"sources":["../../server/middlewares/authenticate.js"],"names":["req","res","next","authorizationHeader","headers","token","split","verify","jwtSecret","err","decoded","status","json","error","query","select","where","id","fetch","then","user","currentUser"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;kBAEe,UAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,QAAMC,sBAAsBH,IAAII,OAAJ,CAAY,oBAAZ,CAA5B;AACA,QAAIC,cAAJ;;AAEA,QAAGF,mBAAH,EAAwBE,QAAQF,oBAAoBG,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAR;;AAExB,QAAGD,KAAH,EAAU;AACN,+BAAIE,MAAJ,CAAWF,KAAX,EAAkB,iBAAOG,SAAzB,EAAoC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACnD,gBAAGD,GAAH,EAAQ;AACJR,oBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,wBAAT,EAArB;AACH,aAFD,MAEO;AACH,+BAAKC,KAAL,CAAW;AACPC,4BAAQ,CAAC,IAAD,EAAO,UAAP,EAAmB,OAAnB,CADD;AAEPC,2BAAO,EAAEC,IAAIP,QAAQO,EAAd;AAFA,iBAAX,EAGGC,KAHH,GAGWC,IAHX,CAGgB,gBAAQ;AACpB,wBAAGC,IAAH,EAAS;AACLpB,4BAAIqB,WAAJ,GAAkBD,IAAlB;AACAlB;AACH,qBAHD,MAGO;AACHD,4BAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,cAAT,EAArB;AACH;AACJ,iBAVD;AAWH;AACH,SAhBD;AAiBH,KAlBD,MAkBO;AACHZ,YAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,mBAAT,EAArB;AACH;AACJ,C","file":"authenticate.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\nimport User from '../models/User';\r\n\r\nexport default (req, res, next) => {\r\n    const authorizationHeader = req.headers['authorizationtoken'];\r\n    let token;\r\n\r\n    if(authorizationHeader) token = authorizationHeader.split(' ')[1];\r\n\r\n    if(token) {\r\n        jwt.verify(token, config.jwtSecret, (err, decoded) => {\r\n           if(err) {\r\n               res.status(401).json({ error: 'Failed to authenticate' });\r\n           } else {\r\n               User.query({\r\n                   select: ['id', 'username', 'email'],\r\n                   where: { id: decoded.id }\r\n               }).fetch().then(user => {\r\n                   if(user) {\r\n                       req.currentUser = user;\r\n                       next();\r\n                   } else {\r\n                       res.status(404).json({ error: 'No such user' });\r\n                   }\r\n               })\r\n           }\r\n        });\r\n    } else {\r\n        res.status(403).json({ error: 'No token provided' });\r\n    }\r\n};"]}