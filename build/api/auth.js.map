{"version":3,"sources":["../../server/api/auth.js"],"names":["router","Router","post","req","res","body","username","password","query","where","fetch","then","user","compareSync","get","token","sign","id","jwtSecret","set","save","json","status","errors","form"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACID,IAAIE,IADR;AAAA,QACnBC,QADmB,aACnBA,QADmB;AAAA,QACTC,QADS,aACTA,QADS;;;AAG3B,mBAAKC,KAAL,CAAW;AACPC,eAAO,EAAEH,UAAUA,QAAZ;AADA,KAAX,EAEGI,KAFH,GAEWC,IAFX,CAEgB,gBAAQ;AACpB,YAAGC,IAAH,EAAS;AACL,gBAAG,iBAAOC,WAAP,CAAmBN,QAAnB,EAA4BK,KAAKE,GAAL,CAAS,iBAAT,CAA5B,CAAH,EAA6D;;AAEzD,oBAAMC,QAAQ,uBAAIC,IAAJ,CAAS;AACnBC,wBAAIL,KAAKE,GAAL,CAAS,IAAT,CADe;AAEnBR,8BAAUM,KAAKE,GAAL,CAAS,UAAT;AAFS,iBAAT,EAGX,iBAAOI,SAHI,CAAd;;AAKAN,qBAAKO,GAAL,CAAS,WAAT,EAAsB,IAAtB;AACAP,qBAAKQ,IAAL;;AAEAhB,oBAAIiB,IAAJ,CAAS,EAAEN,OAAOA,KAAT,EAAT;AAEH,aAZD,MAYOX,IAAIkB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAAEE,QAAQ,EAAEC,MAAM,wBAAR,EAAV,EAArB;AACV,SAdD,MAcOpB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAAEE,QAAQ,EAAEC,MAAM,wBAAR,EAAV,EAArB;AACV,KAlBD;AAoBH,CAvBD;;kBAyBexB,M","file":"auth.js","sourcesContent":["import express from 'express';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config';\r\n\r\nimport User from '../models/user';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/', (req, res) => {\r\n    const { username, password } = req.body;\r\n\r\n    User.query({\r\n        where: { username: username}\r\n    }).fetch().then(user => {\r\n        if(user) {\r\n            if(bcrypt.compareSync(password,user.get('password_digest'))) {\r\n\r\n                const token = jwt.sign({\r\n                    id: user.get('id'),\r\n                    username: user.get('username')\r\n                }, config.jwtSecret);\r\n\r\n                user.set('is_online', true);\r\n                user.save();\r\n\r\n                res.json({ token: token });\r\n\r\n            } else res.status(403).json({ errors: { form: 'Invalid authentication' } });\r\n        } else res.status(403).json({ errors: { form: 'Invalid authentication' } });\r\n    })\r\n\r\n});\r\n\r\nexport default router;"]}